When would you want to use a remote repository rather than keeping all your work local?

=======

     It makes sense if I work or do a part of a work outdoors 
     (i.e., without direct access to my PC or notebook) and also
     if I'd like to share the results of my work with others 
     who can either simply use or contribute to this file.


=======

Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?

=======

     When I made some changes in local repository (Git), I might don't want GitHub to update
     to these changes automatically. This is because I don't want to make ANY changes 
     I made in my local host public.
     For example, I might decide to test this new functionality before let others to see it. 
     Or I just added some experimental functions which I want to compare to similar
     functions in parallel branch before deciding which of them I should keep.
     
     It seems that the same is with pulling changes out of remote repository to local host. 
     I might want to experiment with them before pulling into the master branch in Git.
     I also might want to have a feedback from my peers who work on a project online.
     So far, I cannot think about other reasons ;)
     
========

Describe the differences between forks, clones, and branches. 
When would you use one instead of another?
     
========  

     Forks are created in remote repository to create one's own version of GitHub file.
     As GitHub doesn't have option of direct cloning from repository to repository, 
     that's where fork comes into help.
     A clone is a copy of repository which is being created in Git, i.e., on personal PC.
     Branch is a string of changes, usually unique changes. It's being created 'from the 
     root', with no content (unlike clone or fork, which include copied features from 
     the source) and then is filled with some new features.
     
=========

What is the benefit of having a copy of the last known state of the remote stored locally?

=========

      Having a copy of the last known state of the remote stored locally makes one able
      to diverse from current to this previous state, to compare these two versions and 
      also to enable working both independently on local PC and online (either one person
      or two+ people) and then control the changes, selecting the best features and
      merging existing branches. 
      In general, it gives a developer more freedom both in mind (deciding on changes
      and trying different paths of implementation) and in tools (work locally or online).
      
==========

How would you collaborate without using Git or GitHub? 
What would be easier, and what would be harder?

==========

    I would probably make comments manually storing different version of a file 
    with different names and then communicating whose version is better.
    It would be harder to control all necessary changes and to combine them properly.
    On the other hand, for small files without overloaded history of changes 'manual' 
    and 'verbal' collaboration would take less time and effort than through GitHub.

===========

When would you want to make changes in a separate branch rather than directly in master? 
What benefits does each approach have?

===========

     It is safer to make changes not in master branch directly but in separate branch
     and merge is through pull request because one never would have master branch broken
     without taking attentive look and feedback from one's collaborators. That's the case
     when collaboration works and two heads are better than one :) 
     
     
